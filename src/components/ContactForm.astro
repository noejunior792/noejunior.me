---
---

<section class="p-4 bg-white dark:bg-gray-800 rounded-2xl shadow-xl transition-all duration-300 max-w-sm mx-auto">
  <h2 class="text-xl font-bold text-center text-gray-800 dark:text-white mb-3">Deixe um recadinho ❤️</h2>
  <form id="anonymous-message-form" class="space-y-3">
    <textarea
      id="message-textarea"
      class="w-full p-3 bg-gray-50 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-xl focus:outline-none focus:ring-4 focus:ring-pink-300 dark:focus:ring-pink-500 transition-all duration-300 text-sm resize-none"
      rows="4"
      placeholder="Sinta-se à vontade para escrever o que quiser..."
      maxlength="500"
      required
    ></textarea>
    <div class="text-xs text-gray-500 dark:text-gray-400 text-right">
      <span id="char-count">0</span>/500
    </div>
    <button
      id="submit-button"
      type="submit"
      class="w-full px-4 py-2 font-bold text-gray-800 bg-gray-200 rounded-xl shadow-md hover:bg-gray-300 dark:text-gray-700 dark:hover:bg-gray-600 transition-all duration-300 flex items-center justify-center gap-2 text-sm disabled:opacity-50 disabled:cursor-not-allowed"
    >
      <span>Enviar com carinho</span>
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd" />
      </svg>
    </button>
  </form>
</section>

<script>
  async function sendToDiscordWebhook(message) {
    try {
      const webhookUrl = import.meta.env.PUBLIC_WEBHOOK_URL;

      if (!webhookUrl) {
        throw new Error('Webhook URL não configurado');
      }

      const messageData = {
        embeds: [
          {
            title: 'Mensagem Anônima do Site noejunior.me',
            color: 0x4983f5,
            fields: [
              {
                name: 'Mensagem',
                value: message,
              },
            ],
            timestamp: new Date().toISOString(),
          },
        ],
      };

      const response = await fetch(webhookUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(messageData),
      });

      if (!response.ok) {
        throw new Error(`HTTP error! status: ${response.status}`);
      }

      return { success: true };
    } catch (error) {
      return { success: false, error: error.message };
    }
  }

  function initContactForm() {
    const form = document.getElementById('anonymous-message-form');
    const textarea = document.getElementById('message-textarea');
    const submitBtn = document.getElementById('submit-button');
    const charCount = document.getElementById('char-count');

    if (!form || !textarea || !submitBtn || !charCount) return;

    // Character count
    function updateCharCount() {
      const count = textarea.value.length;
      charCount.textContent = count.toString();

      if (count > 450) {
        charCount.classList.add('text-red-500');
      } else {
        charCount.classList.remove('text-red-500');
      }
    }

    textarea.addEventListener('input', updateCharCount);

    // Form submission
    form.addEventListener('submit', async (e) => {
      e.preventDefault();

      const message = textarea.value.trim();
      if (!message) {
        alert('Por favor, escreva uma mensagem antes de enviar.');
        return;
      }
      if (message.length > 500) {
        alert('Mensagem muito longa. Máximo 500 caracteres.');
        return;
      }

      submitBtn.disabled = true;
      submitBtn.innerHTML = '<span class="animate-pulse">Enviando...</span>';

      const result = await sendToDiscordWebhook(message);

      if (result.success) {
        alert('Mensagem enviada com sucesso! Envie mais uma, amo conversar com você!');
        textarea.value = '';
        updateCharCount();

        // Fechar formulário
        if (window.appState) {
          window.appState.contactFormOpen = false;
        }
        const wrapper = document.getElementById('contact-form-wrapper');
        const btn = document.getElementById('toggle-contact-form');
        if (wrapper && btn) {
          wrapper.classList.add('hidden');
          btn.textContent = 'Contactar';
          btn.className = btn.className.replace('bg-red-500 hover:bg-red-600', 'bg-blue-500 hover:bg-blue-600');
        }
      } else {
        alert(`Erro ao enviar mensagem: ${result.error}`);
      }

      submitBtn.disabled = false;
      submitBtn.innerHTML = '<span>Enviar com carinho</span><svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd" /></path></svg>';
    });

    updateCharCount();
  }

  // Initialize
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initContactForm);
  } else {
    initContactForm();
  }

  // Re-initialize after Astro transitions
  document.addEventListener('astro:after-swap', initContactForm);
  document.addEventListener('astro:page-load', initContactForm);
</script>
