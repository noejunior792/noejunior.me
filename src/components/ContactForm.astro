---
---

<section class="p-4 bg-white dark:bg-gray-800 rounded-2xl shadow-xl transition-all duration-300 max-w-sm mx-auto">
  <h2 class="text-xl font-bold text-center text-gray-800 dark:text-white mb-3">Deixe um recadinho ❤️</h2>
  <form id="anonymous-message-form" class="space-y-3">
    <textarea
      id="message-textarea"
      class="w-full p-3 bg-gray-50 dark:bg-gray-700 border border-gray-200 dark:border-gray-600 rounded-xl focus:outline-none focus:ring-4 focus:ring-pink-300 dark:focus:ring-pink-500 transition-all duration-300 text-sm resize-none"
      rows="4"
      placeholder="Sinta-se à vontade para escrever o que quiser..."
      maxlength="500"
      required
    ></textarea>
    <div class="text-xs text-gray-500 dark:text-gray-400 text-right">
      <span id="char-count">0</span>/500
    </div>
    <button
      id="submit-button"
      type="submit"
      class="w-full px-4 py-2 font-bold text-gray-800 bg-gray-200 rounded-xl shadow-md hover:bg-gray-300 dark:text-gray-700 dark:hover:bg-gray-600 transition-all duration-300 flex items-center justify-center gap-2 text-sm disabled:opacity-50 disabled:cursor-not-allowed"
    >
      <span>Enviar com carinho</span>
      <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor">
        <path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd" />
      </svg>
    </button>
  </form>
</section>

<script is:inline>
  // Global form state management
  window.contactFormData = window.contactFormData || {
    formInitialized: false,
    formListeners: new Set()
  };

  function initContactForm() {
    const form = document.getElementById('anonymous-message-form');
    const messageTextarea = document.getElementById('message-textarea');
    const submitButton = document.getElementById('submit-button');
    const charCount = document.getElementById('char-count');

    if (!form || !messageTextarea || !submitButton || !charCount) {
      console.log('Contact form elements not found');
      return;
    }

    // Clean up existing listeners
    window.contactFormData.formListeners.forEach(cleanup => cleanup());
    window.contactFormData.formListeners.clear();

    // Character counter
    function updateCharCount() {
      const count = messageTextarea.value.length;
      charCount.textContent = count.toString();

      if (count > 450) {
        charCount.classList.add('text-red-500');
        charCount.classList.remove('text-gray-500', 'dark:text-gray-400');
      } else {
        charCount.classList.remove('text-red-500');
        charCount.classList.add('text-gray-500', 'dark:text-gray-400');
      }
    }

    // Add input listener for character count
    const inputHandler = () => updateCharCount();
    messageTextarea.addEventListener('input', inputHandler);
    window.contactFormData.formListeners.add(() => {
      messageTextarea.removeEventListener('input', inputHandler);
    });

    // Initial count
    updateCharCount();

    // Form submission handler
    const submitHandler = async (e) => {
      e.preventDefault();

      const message = messageTextarea.value.trim();

      if (!message) {
        alert('Por favor, escreva uma mensagem antes de enviar.');
        return;
      }

      if (message.length > 500) {
        alert('Mensagem muito longa. Máximo 500 caracteres.');
        return;
      }

      submitButton.disabled = true;
      submitButton.innerHTML = '<span class="animate-pulse">Enviando...</span>';

      try {
        const response = await fetch('/api/send-message', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ message }),
        });

        const data = await response.json();

        if (response.ok) {
          alert(data.message || 'Mensagem enviada com sucesso!');
          messageTextarea.value = '';
          updateCharCount();

          // Close contact form after successful submission
          if (window.contactFormState) {
            window.contactFormState.isOpen = false;
            
            // Update UI
            const formWrapper = document.getElementById('contact-form-wrapper');
            const toggleButton = document.getElementById('toggle-contact-form');
            if (formWrapper && toggleButton) {
              formWrapper.classList.add('hidden');
              toggleButton.textContent = 'Contactar';
              toggleButton.classList.add('bg-blue-500', 'hover:bg-blue-600');
              toggleButton.classList.remove('bg-red-500', 'hover:bg-red-600');
            }
          }
        } else {
          alert(data.message || 'Erro ao enviar mensagem.');
        }
      } catch (error) {
        console.error('Erro de rede:', error);
        alert('Erro de rede. Por favor, tente novamente.');
      } finally {
        submitButton.disabled = false;
        submitButton.innerHTML = '<span>Enviar com carinho</span><svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" viewBox="0 0 20 20" fill="currentColor"><path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd" /></path></svg>';
      }
    };

    // Add form listener
    form.addEventListener('submit', submitHandler);
    window.contactFormData.formListeners.add(() => {
      form.removeEventListener('submit', submitHandler);
    });

    window.contactFormData.formInitialized = true;
    console.log('Contact form initialized');
  }

  // Initialize on DOM ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', initContactForm);
  } else {
    setTimeout(initContactForm, 50);
  }

  // Re-initialize on Astro page transitions
  document.addEventListener('astro:after-swap', () => {
    console.log('ContactForm: Re-initializing after Astro transition');
    setTimeout(initContactForm, 150);
  });

  document.addEventListener('astro:page-load', () => {
    console.log('ContactForm: Re-initializing after page load');
    setTimeout(initContactForm, 150);
  });
</script>